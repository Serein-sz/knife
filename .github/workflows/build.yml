name: Cross Platform Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            output_name: knife-linux-amd64
            go: '1.24'
          - os: macos-latest
            goos: darwin
            goarch: amd64
            output_name: knife-darwin-amd64
            go: '1.24'
          - os: macos-latest
            goos: darwin
            goarch: arm64
            output_name: knife-darwin-arm64
            go: '1.24'
          - os: windows-latest
            goos: windows
            goarch: amd64
            output_name: knife-windows-amd64.exe
            go: '1.24'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Create bin directory
        run: mkdir -p bin

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -v -o ./bin/${{ matrix.output_name }} main.go

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: ./bin/${{ matrix.output_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts/

      - name: Prepare artifacts for release
        run: |
          mkdir -p release_files
          find artifacts -type f -name "knife-*" -exec cp {} release_files/ \;

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: release_files/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
